
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Executing script file `run.ys' --

1. Executing Verilog-2005 frontend: sync_arith_unit_12.sv
Parsing SystemVerilog input from `sync_arith_unit_12.sv' to AST representation.
Generating RTLIL representation for module `\ustawienie'.
Generating RTLIL representation for module `\przesuniecie'.
Generating RTLIL representation for module `\porownanie'.
Generating RTLIL representation for module `\konwersja'.
Generating RTLIL representation for module `\sync_arith_unit_12'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \sync_arith_unit_12_rtl
Used module:     \konwersja
Used module:     \porownanie
Used module:     \ustawienie
Used module:     \przesuniecie

2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\konwersja'.
Parameter \BITS = 32
Generating RTLIL representation for module `$paramod\konwersja\BITS=32'.

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\porownanie'.
Parameter \BITS = 32
Generating RTLIL representation for module `$paramod\porownanie\BITS=32'.

2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\ustawienie'.
Parameter \BITS = 32
Generating RTLIL representation for module `$paramod\ustawienie\BITS=32'.

2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\przesuniecie'.
Parameter \BITS = 32
Generating RTLIL representation for module `$paramod\przesuniecie\BITS=32'.

2.6. Analyzing design hierarchy..
Top module:  \sync_arith_unit_12_rtl
Used module:     $paramod\konwersja\BITS=32
Used module:     $paramod\porownanie\BITS=32
Used module:     $paramod\ustawienie\BITS=32
Used module:     $paramod\przesuniecie\BITS=32

2.7. Analyzing design hierarchy..
Top module:  \sync_arith_unit_12_rtl
Used module:     $paramod\konwersja\BITS=32
Used module:     $paramod\porownanie\BITS=32
Used module:     $paramod\ustawienie\BITS=32
Used module:     $paramod\przesuniecie\BITS=32
Removing unused module `\sync_arith_unit_12'.
Removing unused module `\konwersja'.
Removing unused module `\porownanie'.
Removing unused module `\przesuniecie'.
Removing unused module `\ustawienie'.
Removed 5 unused modules.
Warning: Resizing cell port sync_arith_unit_12_rtl.porownanie.o_result from 32 bits to 1 bits.

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \sync_arith_unit_12_rtl
Used module:     $paramod\konwersja\BITS=32
Used module:     $paramod\porownanie\BITS=32
Used module:     $paramod\ustawienie\BITS=32
Used module:     $paramod\przesuniecie\BITS=32

3.1.2. Analyzing design hierarchy..
Top module:  \sync_arith_unit_12_rtl
Used module:     $paramod\konwersja\BITS=32
Used module:     $paramod\porownanie\BITS=32
Used module:     $paramod\ustawienie\BITS=32
Used module:     $paramod\przesuniecie\BITS=32
Removed 0 unused modules.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 4 switch rules as full_case in process $proc$przesuniecie.sv:13$227 in module $paramod\przesuniecie\BITS=32.
Marked 4 switch rules as full_case in process $proc$ustawienie.sv:15$217 in module $paramod\ustawienie\BITS=32.
Marked 2 switch rules as full_case in process $proc$porownanie.sv:12$205 in module $paramod\porownanie\BITS=32.
Marked 2 switch rules as full_case in process $proc$konwersja.sv:16$197 in module $paramod\konwersja\BITS=32.
Removed 1 dead cases from process $proc$sync_arith_unit_12.sv:78$84 in module sync_arith_unit_12_rtl.
Marked 37 switch rules as full_case in process $proc$sync_arith_unit_12.sv:78$84 in module sync_arith_unit_12_rtl.
Marked 1 switch rules as full_case in process $proc$sync_arith_unit_12.sv:113$195 in module sync_arith_unit_12_rtl.
Removed a total of 1 dead cases.

3.2.3. Executing PROC_INIT pass (extract init attributes).

3.2.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \i_reset in `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:113$195'.

3.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\przesuniecie\BITS=32.$proc$przesuniecie.sv:13$227'.
     1/9: $4\o_error[0:0]
     2/9: $3\o_error[0:0]
     3/9: $3\o_result[31:0]
     4/9: $2\o_error[0:0]
     5/9: $2\o_result[31:0]
     6/9: $1\o_error[0:0]
     7/9: $1\o_result[31:0]
     8/9: $0\o_error[0:0]
     9/9: $0\o_result[31:0]
Creating decoders for process `$paramod\ustawienie\BITS=32.$proc$ustawienie.sv:15$217'.
     1/43: $4\tymczasowy_rejestr[31:0] [31]
     2/43: $4\tymczasowy_rejestr[31:0] [28]
     3/43: $4\tymczasowy_rejestr[31:0] [26]
     4/43: $4\tymczasowy_rejestr[31:0] [24]
     5/43: $4\tymczasowy_rejestr[31:0] [22]
     6/43: $4\tymczasowy_rejestr[31:0] [20]
     7/43: $4\tymczasowy_rejestr[31:0] [18]
     8/43: $4\tymczasowy_rejestr[31:0] [16]
     9/43: $4\tymczasowy_rejestr[31:0] [14]
    10/43: $4\tymczasowy_rejestr[31:0] [12]
    11/43: $4\tymczasowy_rejestr[31:0] [10]
    12/43: $4\tymczasowy_rejestr[31:0] [8]
    13/43: $4\tymczasowy_rejestr[31:0] [6]
    14/43: $4\tymczasowy_rejestr[31:0] [4]
    15/43: $4\tymczasowy_rejestr[31:0] [2]
    16/43: $4\tymczasowy_rejestr[31:0] [0]
    17/43: $4\tymczasowy_rejestr[31:0] [30]
    18/43: $4\tymczasowy_rejestr[31:0] [25]
    19/43: $4\tymczasowy_rejestr[31:0] [21]
    20/43: $4\tymczasowy_rejestr[31:0] [17]
    21/43: $4\tymczasowy_rejestr[31:0] [13]
    22/43: $4\tymczasowy_rejestr[31:0] [9]
    23/43: $4\tymczasowy_rejestr[31:0] [5]
    24/43: $4\tymczasowy_rejestr[31:0] [1]
    25/43: $4\tymczasowy_rejestr[31:0] [27]
    26/43: $4\tymczasowy_rejestr[31:0] [19]
    27/43: $4\tymczasowy_rejestr[31:0] [11]
    28/43: $4\tymczasowy_rejestr[31:0] [3]
    29/43: $4\tymczasowy_rejestr[31:0] [23]
    30/43: $4\tymczasowy_rejestr[31:0] [7]
    31/43: $4\tymczasowy_rejestr[31:0] [15]
    32/43: $4\tymczasowy_rejestr[31:0] [29]
    33/43: $3\o_result[31:0]
    34/43: $3\tymczasowy_rejestr[31:0]
    35/43: $2\o_error[0:0]
    36/43: $2\o_result[31:0]
    37/43: $2\tymczasowy_rejestr[31:0]
    38/43: $1\o_error[0:0]
    39/43: $1\o_result[31:0]
    40/43: $1\tymczasowy_rejestr[31:0]
    41/43: $0\o_error[0:0]
    42/43: $0\o_result[31:0]
    43/43: $0\tymczasowy_rejestr[31:0]
Creating decoders for process `$paramod\porownanie\BITS=32.$proc$porownanie.sv:12$205'.
     1/3: $2\o_result[0:0]
     2/3: $1\o_result[0:0]
     3/3: $0\o_result[0:0]
Creating decoders for process `$paramod\konwersja\BITS=32.$proc$konwersja.sv:16$197'.
     1/6: $2\o_result[31:0]
     2/6: $2\o_error[0:0]
     3/6: $1\o_result[31:0]
     4/6: $1\o_error[0:0]
     5/6: $0\o_error[0:0]
     6/6: $0\o_result[31:0]
Creating decoders for process `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:78$84'.
     1/48: $2\flaga_ZEROS[0:0]
     2/48: $2\flaga_NOT_EVEN_ZERO[0:0]
     3/48: $1$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\IS_ODD_ZEROS[0:0]$192
     4/48: $32$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$188
     5/48: $31$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$185
     6/48: $30$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$182
     7/48: $29$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$179
     8/48: $28$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$176
     9/48: $27$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$173
    10/48: $26$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$170
    11/48: $25$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$167
    12/48: $24$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$164
    13/48: $23$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$161
    14/48: $22$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$158
    15/48: $21$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$155
    16/48: $20$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$152
    17/48: $19$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$149
    18/48: $18$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$146
    19/48: $17$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$143
    20/48: $16$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$140
    21/48: $15$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$137
    22/48: $14$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$134
    23/48: $13$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$131
    24/48: $12$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$128
    25/48: $11$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$125
    26/48: $10$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$122
    27/48: $9$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$119
    28/48: $8$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$116
    29/48: $7$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$113
    30/48: $6$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$110
    31/48: $5$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$107
    32/48: $4$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$104
    33/48: $3$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$101
    34/48: $2$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$98
    35/48: $1$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$95
    36/48: $1\flaga_ZEROS[0:0]
    37/48: $1\flaga_NOT_EVEN_ZERO[0:0]
    38/48: $1\flaga_ERROR[0:0]
    39/48: $1\wynik[31:0]
    40/48: $0\flaga_ZEROS[0:0]
    41/48: $0\flaga_NOT_EVEN_ZERO[0:0]
    42/48: $0$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\IS_ODD_ZEROS[0:0]$85
    43/48: $0$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\i[31:0]$88
    44/48: $0$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$87
    45/48: $0$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\result[31:0]$86
    46/48: $0\flaga_ERROR[0:0]
    47/48: $0\flaga_OVERFLOW[0:0]
    48/48: $0\wynik[31:0]
Creating decoders for process `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:113$195'.
     1/4: $1\o_status[3:0]
     2/4: $1\o_result[31:0]
     3/4: $0\o_status[3:0]
     4/4: $0\o_result[31:0]

3.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\przesuniecie\BITS=32.\o_result' from process `$paramod\przesuniecie\BITS=32.$proc$przesuniecie.sv:13$227'.
No latch inferred for signal `$paramod\przesuniecie\BITS=32.\o_error' from process `$paramod\przesuniecie\BITS=32.$proc$przesuniecie.sv:13$227'.
No latch inferred for signal `$paramod\ustawienie\BITS=32.\tymczasowy_rejestr' from process `$paramod\ustawienie\BITS=32.$proc$ustawienie.sv:15$217'.
No latch inferred for signal `$paramod\ustawienie\BITS=32.\o_result' from process `$paramod\ustawienie\BITS=32.$proc$ustawienie.sv:15$217'.
No latch inferred for signal `$paramod\ustawienie\BITS=32.\o_error' from process `$paramod\ustawienie\BITS=32.$proc$ustawienie.sv:15$217'.
No latch inferred for signal `$paramod\porownanie\BITS=32.\o_result' from process `$paramod\porownanie\BITS=32.$proc$porownanie.sv:12$205'.
No latch inferred for signal `$paramod\konwersja\BITS=32.\o_result' from process `$paramod\konwersja\BITS=32.$proc$konwersja.sv:16$197'.
No latch inferred for signal `$paramod\konwersja\BITS=32.\o_error' from process `$paramod\konwersja\BITS=32.$proc$konwersja.sv:16$197'.
No latch inferred for signal `\sync_arith_unit_12_rtl.\wynik' from process `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:78$84'.
No latch inferred for signal `\sync_arith_unit_12_rtl.\flaga_ERROR' from process `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:78$84'.
No latch inferred for signal `\sync_arith_unit_12_rtl.\flaga_NOT_EVEN_ZERO' from process `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:78$84'.
No latch inferred for signal `\sync_arith_unit_12_rtl.\flaga_ZEROS' from process `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:78$84'.
No latch inferred for signal `\sync_arith_unit_12_rtl.\flaga_OVERFLOW' from process `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:78$84'.
No latch inferred for signal `\sync_arith_unit_12_rtl.$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\IS_ODD_ZEROS' from process `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:78$84'.
No latch inferred for signal `\sync_arith_unit_12_rtl.$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\result' from process `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:78$84'.
No latch inferred for signal `\sync_arith_unit_12_rtl.$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros' from process `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:78$84'.
No latch inferred for signal `\sync_arith_unit_12_rtl.$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\i' from process `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:78$84'.

3.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\sync_arith_unit_12_rtl.\o_result' using process `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:113$195'.
  created $adff cell `$procdff$1363' with negative edge clock and negative level reset.
Creating register for signal `\sync_arith_unit_12_rtl.\o_status' using process `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:113$195'.
  created $adff cell `$procdff$1364' with negative edge clock and negative level reset.

3.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 4 empty switches in `$paramod\przesuniecie\BITS=32.$proc$przesuniecie.sv:13$227'.
Removing empty process `$paramod\przesuniecie\BITS=32.$proc$przesuniecie.sv:13$227'.
Found and cleaned up 4 empty switches in `$paramod\ustawienie\BITS=32.$proc$ustawienie.sv:15$217'.
Removing empty process `$paramod\ustawienie\BITS=32.$proc$ustawienie.sv:15$217'.
Found and cleaned up 2 empty switches in `$paramod\porownanie\BITS=32.$proc$porownanie.sv:12$205'.
Removing empty process `$paramod\porownanie\BITS=32.$proc$porownanie.sv:12$205'.
Found and cleaned up 2 empty switches in `$paramod\konwersja\BITS=32.$proc$konwersja.sv:16$197'.
Removing empty process `$paramod\konwersja\BITS=32.$proc$konwersja.sv:16$197'.
Found and cleaned up 37 empty switches in `\sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:78$84'.
Removing empty process `sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:78$84'.
Removing empty process `sync_arith_unit_12_rtl.$proc$sync_arith_unit_12.sv:113$195'.
Cleaned up 49 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\przesuniecie\BITS=32.
<suppressed ~1 debug messages>
Optimizing module $paramod\ustawienie\BITS=32.
<suppressed ~2 debug messages>
Optimizing module $paramod\porownanie\BITS=32.
<suppressed ~2 debug messages>
Optimizing module $paramod\konwersja\BITS=32.
<suppressed ~7 debug messages>
Optimizing module sync_arith_unit_12_rtl.
<suppressed ~74 debug messages>

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..
Removed 48 unused cells and 358 unused wires.
<suppressed ~56 debug messages>

3.5. Executing CHECK pass (checking for obvious problems).
checking module $paramod\konwersja\BITS=32..
checking module $paramod\porownanie\BITS=32..
checking module $paramod\przesuniecie\BITS=32..
checking module $paramod\ustawienie\BITS=32..
checking module sync_arith_unit_12_rtl..
found and reported 0 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
Optimizing module $paramod\porownanie\BITS=32.
Optimizing module $paramod\przesuniecie\BITS=32.
Optimizing module $paramod\ustawienie\BITS=32.
Optimizing module sync_arith_unit_12_rtl.

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
<suppressed ~12 debug messages>
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
Finding identical cells in module `\sync_arith_unit_12_rtl'.
Removed a total of 4 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\konwersja\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1241: \i_arg_A -> { 1'0 \i_arg_A [30:0] }
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1232.
    dead port 2/2 on $mux $procmux$1238.
Running muxtree optimizer on module $paramod\porownanie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1223.
Running muxtree optimizer on module $paramod\przesuniecie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$251.
    dead port 1/2 on $mux $procmux$254.
    dead port 1/2 on $mux $procmux$257.
    dead port 1/2 on $mux $procmux$263.
    dead port 1/2 on $mux $procmux$266.
    dead port 1/2 on $mux $procmux$272.
    dead port 1/2 on $mux $procmux$275.
    dead port 1/2 on $mux $procmux$281.
    dead port 1/2 on $mux $procmux$287.
Running muxtree optimizer on module $paramod\ustawienie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1179.
    dead port 1/2 on $mux $procmux$1182.
    dead port 1/2 on $mux $procmux$1197.
    dead port 1/2 on $mux $procmux$1203.
Running muxtree optimizer on module \sync_arith_unit_12_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 16 multiplexer ports.
<suppressed ~76 debug messages>

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\konwersja\BITS=32.
    New input vector for $reduce_or cell $reduce_or$konwersja.sv:30$200: { \i_arg_A [0] \i_arg_A [1] \i_arg_A [2] \i_arg_A [3] \i_arg_A [4] \i_arg_A [5] \i_arg_A [6] \i_arg_A [7] \i_arg_A [8] \i_arg_A [9] \i_arg_A [10] \i_arg_A [11] \i_arg_A [12] \i_arg_A [13] \i_arg_A [14] \i_arg_A [15] \i_arg_A [16] \i_arg_A [17] \i_arg_A [18] \i_arg_A [19] \i_arg_A [20] \i_arg_A [21] \i_arg_A [22] \i_arg_A [23] \i_arg_A [24] \i_arg_A [25] \i_arg_A [26] \i_arg_A [27] \i_arg_A [28] \i_arg_A [29] \i_arg_A [30] }
  Optimizing cells in module $paramod\konwersja\BITS=32.
  Optimizing cells in module $paramod\porownanie\BITS=32.
  Optimizing cells in module $paramod\przesuniecie\BITS=32.
  Optimizing cells in module $paramod\ustawienie\BITS=32.
  Optimizing cells in module \sync_arith_unit_12_rtl.
Performed a total of 1 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
Finding identical cells in module `\sync_arith_unit_12_rtl'.
Removed a total of 0 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..
Removed 0 unused cells and 20 unused wires.
<suppressed ~4 debug messages>

3.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
Optimizing module $paramod\porownanie\BITS=32.
Optimizing module $paramod\przesuniecie\BITS=32.
Optimizing module $paramod\ustawienie\BITS=32.
Optimizing module sync_arith_unit_12_rtl.

3.6.9. Rerunning OPT passes. (Maybe there is more to do..)

3.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\konwersja\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\porownanie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\przesuniecie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\ustawienie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sync_arith_unit_12_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~76 debug messages>

3.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\konwersja\BITS=32.
  Optimizing cells in module $paramod\porownanie\BITS=32.
  Optimizing cells in module $paramod\przesuniecie\BITS=32.
  Optimizing cells in module $paramod\ustawienie\BITS=32.
  Optimizing cells in module \sync_arith_unit_12_rtl.
Performed a total of 0 changes.

3.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
Finding identical cells in module `\sync_arith_unit_12_rtl'.
Removed a total of 0 cells.

3.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..

3.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
Optimizing module $paramod\porownanie\BITS=32.
Optimizing module $paramod\przesuniecie\BITS=32.
Optimizing module $paramod\ustawienie\BITS=32.
Optimizing module sync_arith_unit_12_rtl.

3.6.16. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).
Removed cell $paramod\konwersja\BITS=32.$procmux$1229 ($mux).
Removed top 1 bits (of 32) from mux cell $paramod\konwersja\BITS=32.$procmux$1241 ($mux).
Removed top 31 bits (of 32) from wire $paramod\konwersja\BITS=32.$reduce_or$konwersja.sv:30$200_Y.
Removed cell $paramod\przesuniecie\BITS=32.$procmux$269 ($mux).
Removed top 31 bits (of 32) from port B of cell $paramod\przesuniecie\BITS=32.$gt$przesuniecie.sv:20$229 ($gt).
Removed top 25 bits (of 32) from port B of cell $paramod\przesuniecie\BITS=32.$lt$przesuniecie.sv:20$231 ($lt).
Removed top 1 bits (of 33) from port A of cell $paramod\przesuniecie\BITS=32.$not$przesuniecie.sv:27$238 ($not).
Removed top 25 bits (of 32) from port B of cell $paramod\przesuniecie\BITS=32.$ge$przesuniecie.sv:34$242 ($ge).
Removed top 31 bits (of 32) from port B of cell $paramod\przesuniecie\BITS=32.$lt$przesuniecie.sv:35$243 ($lt).
Removed top 31 bits (of 32) from port B of cell $paramod\przesuniecie\BITS=32.$lt$przesuniecie.sv:40$246 ($lt).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$313_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$305 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$302 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$299 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$298_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$337 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$334 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$320 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$331 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$317 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$370_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$314 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$330_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$350 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$356 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$353 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$349_CMP0 ($eq).
Removed top 26 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$gt$ustawienie.sv:28$219 ($gt).
Removed top 31 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$ge$ustawienie.sv:33$220 ($ge).
Removed top 25 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$lt$ustawienie.sv:33$223 ($lt).
Removed cell $paramod\ustawienie\BITS=32.$procmux$371 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$374 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$377 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$393_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$394 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$397 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$400 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$418_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$419 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$422 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$425 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$445_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$446 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$449 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$452 ($mux).
Removed top 28 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$474_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$475 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$478 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$481 ($mux).
Removed top 28 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$505_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$506 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$509 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$512 ($mux).
Removed top 28 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$538_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$539 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$542 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$545 ($mux).
Removed top 28 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$573_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$574 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$577 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$580 ($mux).
Removed top 29 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$610_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$611 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$614 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$617 ($mux).
Removed top 29 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$649_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$650 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$653 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$656 ($mux).
Removed top 30 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$690_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$691 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$694 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$697 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$734 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$737 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$740 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$746_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$747 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$750 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$753 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$764_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$765 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$768 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$771 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$786_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$787 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$790 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$793 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$812_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$813 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$816 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$819 ($mux).
Removed top 28 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$842_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$843 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$846 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$849 ($mux).
Removed top 28 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$876_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$877 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$880 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$883 ($mux).
Removed top 29 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$914_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$915 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$918 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$921 ($mux).
Removed top 31 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$956_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$957 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$960 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$963 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$972_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$973 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$976 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$979 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$996_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$997 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1000 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1003 ($mux).
Removed top 28 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$1028_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1029 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1032 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1035 ($mux).
Removed top 30 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$1068_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1069 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1072 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1075 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$1088_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1089 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1092 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1095 ($mux).
Removed top 29 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$1124_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1125 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1128 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1131 ($mux).
Removed top 28 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$1152_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1153 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1156 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1159 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\ustawienie\BITS=32.$procmux$1166_CMP0 ($eq).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1167 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1170 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1173 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1176 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1200 ($mux).
Removed cell $paramod\ustawienie\BITS=32.$procmux$1215 ($mux).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$99 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$102 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$105 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$108 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$111 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$114 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$117 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$120 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$123 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$126 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$129 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$132 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$135 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$138 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$141 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$144 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$147 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$150 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$153 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$156 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$159 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$162 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$165 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$168 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$171 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$174 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$177 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$180 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$183 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$186 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$add$sync_arith_unit_12.sv:65$189 ($add).
Removed top 30 bits (of 32) from port B of cell sync_arith_unit_12_rtl.$eq$sync_arith_unit_12.sv:69$191 ($eq).
Removed top 31 bits (of 32) from mux cell sync_arith_unit_12_rtl.$procmux$1349 ($mux).
Removed top 1 bits (of 2) from port B of cell sync_arith_unit_12_rtl.$procmux$1361_CMP0 ($eq).
Removed top 31 bits (of 32) from wire sync_arith_unit_12_rtl.$1$func$\IS_ODD_ZEROS$sync_arith_unit_12.sv:103$51$\count_zeros[31:0]$95.
Removed top 31 bits (of 32) from wire sync_arith_unit_12_rtl.poro_wynik.

3.8. Executing PEEPOPT pass (run peephole optimizers).

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..
Removed 5 unused cells and 109 unused wires.
<suppressed ~9 debug messages>

3.10. Executing TECHMAP pass (map to technology primitives).

3.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

3.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~688 debug messages>

3.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod\konwersja\BITS=32:
  creating $macc model for $add$konwersja.sv:31$204 ($add).
  creating $alu model for $macc $add$konwersja.sv:31$204.
  creating $alu cell for $add$konwersja.sv:31$204: $auto$alumacc.cc:474:replace_alu$1368
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\porownanie\BITS=32:
  creating $alu model for $gt$porownanie.sv:17$207 ($gt): new $alu
  creating $alu cell for $gt$porownanie.sv:17$207: $auto$alumacc.cc:474:replace_alu$1372
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\przesuniecie\BITS=32:
  creating $alu model for $ge$przesuniecie.sv:34$242 ($ge): new $alu
  creating $alu model for $gt$przesuniecie.sv:20$229 ($gt): new $alu
  creating $alu model for $lt$przesuniecie.sv:20$231 ($lt): merged with $ge$przesuniecie.sv:34$242.
  creating $alu model for $lt$przesuniecie.sv:35$243 ($lt): new $alu
  creating $alu model for $lt$przesuniecie.sv:40$246 ($lt): merged with $gt$przesuniecie.sv:20$229.
  creating $alu cell for $lt$przesuniecie.sv:35$243: $auto$alumacc.cc:474:replace_alu$1388
  creating $alu cell for $gt$przesuniecie.sv:20$229, $lt$przesuniecie.sv:40$246: $auto$alumacc.cc:474:replace_alu$1401
  creating $alu cell for $ge$przesuniecie.sv:34$242, $lt$przesuniecie.sv:20$231: $auto$alumacc.cc:474:replace_alu$1414
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\ustawienie\BITS=32:
  creating $alu model for $gt$ustawienie.sv:28$219 ($gt): new $alu
  creating $alu cell for $gt$ustawienie.sv:28$219: $auto$alumacc.cc:474:replace_alu$1430
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module sync_arith_unit_12_rtl:
  creating $macc model for $add$sync_arith_unit_12.sv:65$102 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$105 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$108 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$111 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$114 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$117 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$120 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$123 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$126 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$129 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$132 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$135 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$138 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$141 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$144 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$147 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$150 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$153 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$156 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$159 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$162 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$165 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$168 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$171 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$174 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$177 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$180 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$183 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$186 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$189 ($add).
  creating $macc model for $add$sync_arith_unit_12.sv:65$99 ($add).
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$99.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$189.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$186.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$183.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$180.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$177.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$174.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$171.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$168.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$165.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$162.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$159.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$156.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$153.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$150.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$147.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$144.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$141.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$138.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$135.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$132.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$129.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$126.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$123.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$120.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$117.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$114.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$111.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$108.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$105.
  creating $alu model for $macc $add$sync_arith_unit_12.sv:65$102.
  creating $alu cell for $add$sync_arith_unit_12.sv:65$102: $auto$alumacc.cc:474:replace_alu$1437
  creating $alu cell for $add$sync_arith_unit_12.sv:65$105: $auto$alumacc.cc:474:replace_alu$1440
  creating $alu cell for $add$sync_arith_unit_12.sv:65$108: $auto$alumacc.cc:474:replace_alu$1443
  creating $alu cell for $add$sync_arith_unit_12.sv:65$111: $auto$alumacc.cc:474:replace_alu$1446
  creating $alu cell for $add$sync_arith_unit_12.sv:65$114: $auto$alumacc.cc:474:replace_alu$1449
  creating $alu cell for $add$sync_arith_unit_12.sv:65$117: $auto$alumacc.cc:474:replace_alu$1452
  creating $alu cell for $add$sync_arith_unit_12.sv:65$120: $auto$alumacc.cc:474:replace_alu$1455
  creating $alu cell for $add$sync_arith_unit_12.sv:65$123: $auto$alumacc.cc:474:replace_alu$1458
  creating $alu cell for $add$sync_arith_unit_12.sv:65$126: $auto$alumacc.cc:474:replace_alu$1461
  creating $alu cell for $add$sync_arith_unit_12.sv:65$129: $auto$alumacc.cc:474:replace_alu$1464
  creating $alu cell for $add$sync_arith_unit_12.sv:65$132: $auto$alumacc.cc:474:replace_alu$1467
  creating $alu cell for $add$sync_arith_unit_12.sv:65$135: $auto$alumacc.cc:474:replace_alu$1470
  creating $alu cell for $add$sync_arith_unit_12.sv:65$138: $auto$alumacc.cc:474:replace_alu$1473
  creating $alu cell for $add$sync_arith_unit_12.sv:65$141: $auto$alumacc.cc:474:replace_alu$1476
  creating $alu cell for $add$sync_arith_unit_12.sv:65$144: $auto$alumacc.cc:474:replace_alu$1479
  creating $alu cell for $add$sync_arith_unit_12.sv:65$147: $auto$alumacc.cc:474:replace_alu$1482
  creating $alu cell for $add$sync_arith_unit_12.sv:65$150: $auto$alumacc.cc:474:replace_alu$1485
  creating $alu cell for $add$sync_arith_unit_12.sv:65$153: $auto$alumacc.cc:474:replace_alu$1488
  creating $alu cell for $add$sync_arith_unit_12.sv:65$156: $auto$alumacc.cc:474:replace_alu$1491
  creating $alu cell for $add$sync_arith_unit_12.sv:65$159: $auto$alumacc.cc:474:replace_alu$1494
  creating $alu cell for $add$sync_arith_unit_12.sv:65$162: $auto$alumacc.cc:474:replace_alu$1497
  creating $alu cell for $add$sync_arith_unit_12.sv:65$165: $auto$alumacc.cc:474:replace_alu$1500
  creating $alu cell for $add$sync_arith_unit_12.sv:65$168: $auto$alumacc.cc:474:replace_alu$1503
  creating $alu cell for $add$sync_arith_unit_12.sv:65$171: $auto$alumacc.cc:474:replace_alu$1506
  creating $alu cell for $add$sync_arith_unit_12.sv:65$174: $auto$alumacc.cc:474:replace_alu$1509
  creating $alu cell for $add$sync_arith_unit_12.sv:65$177: $auto$alumacc.cc:474:replace_alu$1512
  creating $alu cell for $add$sync_arith_unit_12.sv:65$180: $auto$alumacc.cc:474:replace_alu$1515
  creating $alu cell for $add$sync_arith_unit_12.sv:65$183: $auto$alumacc.cc:474:replace_alu$1518
  creating $alu cell for $add$sync_arith_unit_12.sv:65$186: $auto$alumacc.cc:474:replace_alu$1521
  creating $alu cell for $add$sync_arith_unit_12.sv:65$189: $auto$alumacc.cc:474:replace_alu$1524
  creating $alu cell for $add$sync_arith_unit_12.sv:65$99: $auto$alumacc.cc:474:replace_alu$1527
  created 31 $alu and 0 $macc cells.

3.12. Executing SHARE pass (SAT-based resource sharing).

3.13. Executing OPT pass (performing simple optimizations).

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
<suppressed ~1 debug messages>
Optimizing module $paramod\porownanie\BITS=32.
<suppressed ~1 debug messages>
Optimizing module $paramod\przesuniecie\BITS=32.
<suppressed ~2 debug messages>
Optimizing module $paramod\ustawienie\BITS=32.
Optimizing module sync_arith_unit_12_rtl.

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
Finding identical cells in module `\sync_arith_unit_12_rtl'.
Removed a total of 0 cells.

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\konwersja\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\porownanie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\przesuniecie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\ustawienie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sync_arith_unit_12_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\konwersja\BITS=32.
  Optimizing cells in module $paramod\porownanie\BITS=32.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1375: { $auto$alumacc.cc:490:replace_alu$1373 [0] $auto$alumacc.cc:490:replace_alu$1373 [1] $auto$alumacc.cc:490:replace_alu$1373 [2] $auto$alumacc.cc:490:replace_alu$1373 [3] $auto$alumacc.cc:490:replace_alu$1373 [4] $auto$alumacc.cc:490:replace_alu$1373 [5] $auto$alumacc.cc:490:replace_alu$1373 [6] $auto$alumacc.cc:490:replace_alu$1373 [7] $auto$alumacc.cc:490:replace_alu$1373 [8] $auto$alumacc.cc:490:replace_alu$1373 [9] $auto$alumacc.cc:490:replace_alu$1373 [10] $auto$alumacc.cc:490:replace_alu$1373 [11] $auto$alumacc.cc:490:replace_alu$1373 [12] $auto$alumacc.cc:490:replace_alu$1373 [13] $auto$alumacc.cc:490:replace_alu$1373 [14] $auto$alumacc.cc:490:replace_alu$1373 [15] $auto$alumacc.cc:490:replace_alu$1373 [16] $auto$alumacc.cc:490:replace_alu$1373 [17] $auto$alumacc.cc:490:replace_alu$1373 [18] $auto$alumacc.cc:490:replace_alu$1373 [19] $auto$alumacc.cc:490:replace_alu$1373 [20] $auto$alumacc.cc:490:replace_alu$1373 [21] $auto$alumacc.cc:490:replace_alu$1373 [22] $auto$alumacc.cc:490:replace_alu$1373 [23] $auto$alumacc.cc:490:replace_alu$1373 [24] $auto$alumacc.cc:490:replace_alu$1373 [25] $auto$alumacc.cc:490:replace_alu$1373 [26] $auto$alumacc.cc:490:replace_alu$1373 [27] $auto$alumacc.cc:490:replace_alu$1373 [28] $auto$alumacc.cc:490:replace_alu$1373 [29] $auto$alumacc.cc:490:replace_alu$1373 [30] $auto$alumacc.cc:490:replace_alu$1373 [31] }
  Optimizing cells in module $paramod\porownanie\BITS=32.
  Optimizing cells in module $paramod\przesuniecie\BITS=32.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1423: { $auto$rtlil.cc:1864:Xor$1420 $auto$rtlil.cc:1835:ReduceAnd$1422 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1391: { $auto$alumacc.cc:490:replace_alu$1389 [0] $auto$alumacc.cc:490:replace_alu$1389 [1] $auto$alumacc.cc:490:replace_alu$1389 [2] $auto$alumacc.cc:490:replace_alu$1389 [3] $auto$alumacc.cc:490:replace_alu$1389 [4] $auto$alumacc.cc:490:replace_alu$1389 [5] $auto$alumacc.cc:490:replace_alu$1389 [6] $auto$alumacc.cc:490:replace_alu$1389 [7] $auto$alumacc.cc:490:replace_alu$1389 [8] $auto$alumacc.cc:490:replace_alu$1389 [9] $auto$alumacc.cc:490:replace_alu$1389 [10] $auto$alumacc.cc:490:replace_alu$1389 [11] $auto$alumacc.cc:490:replace_alu$1389 [12] $auto$alumacc.cc:490:replace_alu$1389 [13] $auto$alumacc.cc:490:replace_alu$1389 [14] $auto$alumacc.cc:490:replace_alu$1389 [15] $auto$alumacc.cc:490:replace_alu$1389 [16] $auto$alumacc.cc:490:replace_alu$1389 [17] $auto$alumacc.cc:490:replace_alu$1389 [18] $auto$alumacc.cc:490:replace_alu$1389 [19] $auto$alumacc.cc:490:replace_alu$1389 [20] $auto$alumacc.cc:490:replace_alu$1389 [21] $auto$alumacc.cc:490:replace_alu$1389 [22] $auto$alumacc.cc:490:replace_alu$1389 [23] $auto$alumacc.cc:490:replace_alu$1389 [24] $auto$alumacc.cc:490:replace_alu$1389 [25] $auto$alumacc.cc:490:replace_alu$1389 [26] $auto$alumacc.cc:490:replace_alu$1389 [27] $auto$alumacc.cc:490:replace_alu$1389 [28] $auto$alumacc.cc:490:replace_alu$1389 [29] $auto$alumacc.cc:490:replace_alu$1389 [30] $auto$alumacc.cc:490:replace_alu$1389 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1408: { $auto$alumacc.cc:490:replace_alu$1402 [0] $auto$alumacc.cc:490:replace_alu$1402 [1] $auto$alumacc.cc:490:replace_alu$1402 [2] $auto$alumacc.cc:490:replace_alu$1402 [3] $auto$alumacc.cc:490:replace_alu$1402 [4] $auto$alumacc.cc:490:replace_alu$1402 [5] $auto$alumacc.cc:490:replace_alu$1402 [6] $auto$alumacc.cc:490:replace_alu$1402 [7] $auto$alumacc.cc:490:replace_alu$1402 [8] $auto$alumacc.cc:490:replace_alu$1402 [9] $auto$alumacc.cc:490:replace_alu$1402 [10] $auto$alumacc.cc:490:replace_alu$1402 [11] $auto$alumacc.cc:490:replace_alu$1402 [12] $auto$alumacc.cc:490:replace_alu$1402 [13] $auto$alumacc.cc:490:replace_alu$1402 [14] $auto$alumacc.cc:490:replace_alu$1402 [15] $auto$alumacc.cc:490:replace_alu$1402 [16] $auto$alumacc.cc:490:replace_alu$1402 [17] $auto$alumacc.cc:490:replace_alu$1402 [18] $auto$alumacc.cc:490:replace_alu$1402 [19] $auto$alumacc.cc:490:replace_alu$1402 [20] $auto$alumacc.cc:490:replace_alu$1402 [21] $auto$alumacc.cc:490:replace_alu$1402 [22] $auto$alumacc.cc:490:replace_alu$1402 [23] $auto$alumacc.cc:490:replace_alu$1402 [24] $auto$alumacc.cc:490:replace_alu$1402 [25] $auto$alumacc.cc:490:replace_alu$1402 [26] $auto$alumacc.cc:490:replace_alu$1402 [27] $auto$alumacc.cc:490:replace_alu$1402 [28] $auto$alumacc.cc:490:replace_alu$1402 [29] $auto$alumacc.cc:490:replace_alu$1402 [30] $auto$alumacc.cc:490:replace_alu$1402 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1421: { $auto$alumacc.cc:490:replace_alu$1415 [0] $auto$alumacc.cc:490:replace_alu$1415 [1] $auto$alumacc.cc:490:replace_alu$1415 [2] $auto$alumacc.cc:490:replace_alu$1415 [3] $auto$alumacc.cc:490:replace_alu$1415 [4] $auto$alumacc.cc:490:replace_alu$1415 [5] $auto$alumacc.cc:490:replace_alu$1415 [6] $auto$alumacc.cc:490:replace_alu$1415 [7] $auto$alumacc.cc:490:replace_alu$1415 [8] $auto$alumacc.cc:490:replace_alu$1415 [9] $auto$alumacc.cc:490:replace_alu$1415 [10] $auto$alumacc.cc:490:replace_alu$1415 [11] $auto$alumacc.cc:490:replace_alu$1415 [12] $auto$alumacc.cc:490:replace_alu$1415 [13] $auto$alumacc.cc:490:replace_alu$1415 [14] $auto$alumacc.cc:490:replace_alu$1415 [15] $auto$alumacc.cc:490:replace_alu$1415 [16] $auto$alumacc.cc:490:replace_alu$1415 [17] $auto$alumacc.cc:490:replace_alu$1415 [18] $auto$alumacc.cc:490:replace_alu$1415 [19] $auto$alumacc.cc:490:replace_alu$1415 [20] $auto$alumacc.cc:490:replace_alu$1415 [21] $auto$alumacc.cc:490:replace_alu$1415 [22] $auto$alumacc.cc:490:replace_alu$1415 [23] $auto$alumacc.cc:490:replace_alu$1415 [24] $auto$alumacc.cc:490:replace_alu$1415 [25] $auto$alumacc.cc:490:replace_alu$1415 [26] $auto$alumacc.cc:490:replace_alu$1415 [27] $auto$alumacc.cc:490:replace_alu$1415 [28] $auto$alumacc.cc:490:replace_alu$1415 [29] $auto$alumacc.cc:490:replace_alu$1415 [30] $auto$alumacc.cc:490:replace_alu$1415 [31] }
  Optimizing cells in module $paramod\przesuniecie\BITS=32.
  Optimizing cells in module $paramod\ustawienie\BITS=32.
  Optimizing cells in module \sync_arith_unit_12_rtl.
Performed a total of 5 changes.

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
Finding identical cells in module `\sync_arith_unit_12_rtl'.
Removed a total of 0 cells.

3.13.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..
Removed 3 unused cells and 11 unused wires.
<suppressed ~7 debug messages>

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
Optimizing module $paramod\porownanie\BITS=32.
Optimizing module $paramod\przesuniecie\BITS=32.
Optimizing module $paramod\ustawienie\BITS=32.
Optimizing module sync_arith_unit_12_rtl.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\konwersja\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\porownanie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\przesuniecie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\ustawienie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sync_arith_unit_12_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\konwersja\BITS=32.
  Optimizing cells in module $paramod\porownanie\BITS=32.
  Optimizing cells in module $paramod\przesuniecie\BITS=32.
  Optimizing cells in module $paramod\ustawienie\BITS=32.
  Optimizing cells in module \sync_arith_unit_12_rtl.
Performed a total of 0 changes.

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
Finding identical cells in module `\sync_arith_unit_12_rtl'.
Removed a total of 0 cells.

3.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
Optimizing module $paramod\porownanie\BITS=32.
Optimizing module $paramod\przesuniecie\BITS=32.
Optimizing module $paramod\ustawienie\BITS=32.
Optimizing module sync_arith_unit_12_rtl.

3.13.16. Finished OPT passes. (There is nothing left to do.)

3.14. Executing FSM pass (extract and optimize FSM).

3.14.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking sync_arith_unit_12_rtl.o_status as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

3.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..

3.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.15. Executing OPT pass (performing simple optimizations).

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
Optimizing module $paramod\porownanie\BITS=32.
Optimizing module $paramod\przesuniecie\BITS=32.
Optimizing module $paramod\ustawienie\BITS=32.
Optimizing module sync_arith_unit_12_rtl.

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
Finding identical cells in module `\sync_arith_unit_12_rtl'.
Removed a total of 0 cells.

3.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..

3.15.5. Finished fast OPT passes.

3.16. Executing MEMORY pass.

3.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

3.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..

3.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..

3.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..

3.18. Executing OPT pass (performing simple optimizations).

3.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
<suppressed ~2 debug messages>
Optimizing module $paramod\porownanie\BITS=32.
<suppressed ~1 debug messages>
Optimizing module $paramod\przesuniecie\BITS=32.
<suppressed ~7 debug messages>
Optimizing module $paramod\ustawienie\BITS=32.
<suppressed ~34 debug messages>
Optimizing module sync_arith_unit_12_rtl.
<suppressed ~12 debug messages>

3.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
Finding identical cells in module `\sync_arith_unit_12_rtl'.
Removed a total of 0 cells.

3.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..
Removed 1 unused cells and 43 unused wires.
<suppressed ~4 debug messages>

3.18.5. Finished fast OPT passes.

3.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

3.20. Executing OPT pass (performing simple optimizations).

3.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
Optimizing module $paramod\porownanie\BITS=32.
Optimizing module $paramod\przesuniecie\BITS=32.
Optimizing module $paramod\ustawienie\BITS=32.
Optimizing module sync_arith_unit_12_rtl.
<suppressed ~1 debug messages>

3.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
Finding identical cells in module `\sync_arith_unit_12_rtl'.
Removed a total of 0 cells.

3.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\konwersja\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\porownanie\BITS=32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\przesuniecie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\ustawienie\BITS=32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sync_arith_unit_12_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

3.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\konwersja\BITS=32.
  Optimizing cells in module $paramod\porownanie\BITS=32.
  Optimizing cells in module $paramod\przesuniecie\BITS=32.
    Consolidated identical input bits for $mux cell $ternary$przesuniecie.sv:35$244:
      Old ports: A=32'11111111111111111111111111111111, B=0, Y=$3\o_result[31:0]
      New ports: A=1'1, B=1'0, Y=$3\o_result[31:0] [0]
      New connections: $3\o_result[31:0] [31:1] = { $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] $3\o_result[31:0] [0] }
  Optimizing cells in module $paramod\przesuniecie\BITS=32.
  Optimizing cells in module $paramod\ustawienie\BITS=32.
  Optimizing cells in module \sync_arith_unit_12_rtl.
Performed a total of 1 changes.

3.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
Finding identical cells in module `\sync_arith_unit_12_rtl'.
Removed a total of 0 cells.

3.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..

3.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
Optimizing module $paramod\porownanie\BITS=32.
Optimizing module $paramod\przesuniecie\BITS=32.
<suppressed ~1 debug messages>
Optimizing module $paramod\ustawienie\BITS=32.
Optimizing module sync_arith_unit_12_rtl.

3.20.9. Rerunning OPT passes. (Maybe there is more to do..)

3.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\konwersja\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\porownanie\BITS=32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\przesuniecie\BITS=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\ustawienie\BITS=32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sync_arith_unit_12_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

3.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\konwersja\BITS=32.
  Optimizing cells in module $paramod\porownanie\BITS=32.
  Optimizing cells in module $paramod\przesuniecie\BITS=32.
  Optimizing cells in module $paramod\ustawienie\BITS=32.
  Optimizing cells in module \sync_arith_unit_12_rtl.
Performed a total of 0 changes.

3.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
Finding identical cells in module `\sync_arith_unit_12_rtl'.
Removed a total of 0 cells.

3.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..

3.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
Optimizing module $paramod\porownanie\BITS=32.
Optimizing module $paramod\przesuniecie\BITS=32.
Optimizing module $paramod\ustawienie\BITS=32.
Optimizing module sync_arith_unit_12_rtl.

3.20.16. Finished OPT passes. (There is nothing left to do.)

3.21. Executing TECHMAP pass (map to technology primitives).

3.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.21.2. Continuing TECHMAP pass.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $adff.
Using template $paramod\_90_lcu\WIDTH=32 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=6\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod$constmap:b9a86d073741c2a0f7bb241e73c2dd11747f3288$paramod$b11252479d62a4b4e0b25de06cb2d80b446b12e4\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=7\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
No more expansions possible.
<suppressed ~6474 debug messages>

3.22. Executing OPT pass (performing simple optimizations).

3.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
<suppressed ~7 debug messages>
Optimizing module $paramod\porownanie\BITS=32.
<suppressed ~66 debug messages>
Optimizing module $paramod\przesuniecie\BITS=32.
<suppressed ~829 debug messages>
Optimizing module $paramod\ustawienie\BITS=32.
<suppressed ~1078 debug messages>
Optimizing module sync_arith_unit_12_rtl.
<suppressed ~8148 debug messages>

3.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
<suppressed ~78 debug messages>
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
<suppressed ~606 debug messages>
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
<suppressed ~2760 debug messages>
Finding identical cells in module `\sync_arith_unit_12_rtl'.
<suppressed ~6 debug messages>
Removed a total of 1150 cells.

3.22.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:496:simplemap_adff$2717 ($_DFF_NN0_) from module sync_arith_unit_12_rtl.
Replaced 1 DFF cells.

3.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..
Removed 2555 unused cells and 5081 unused wires.
<suppressed ~2560 debug messages>

3.22.5. Rerunning OPT passes. (Removed registers in this run.)

3.22.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
Optimizing module $paramod\porownanie\BITS=32.
Optimizing module $paramod\przesuniecie\BITS=32.
Optimizing module $paramod\ustawienie\BITS=32.
Optimizing module sync_arith_unit_12_rtl.

3.22.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
Finding identical cells in module `\sync_arith_unit_12_rtl'.
Removed a total of 0 cells.

3.22.8. Executing OPT_RMDFF pass (remove dff with constant values).

3.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..

3.22.10. Finished fast OPT passes.

3.23. Executing ABC pass (technology mapping using ABC).

3.23.1. Extracting gate netlist of module `$paramod\konwersja\BITS=32' to `<abc-temp-dir>/input.blif'..
Extracted 66 gates and 100 wires to a netlist network with 32 inputs and 32 outputs.

3.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.1.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       30
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:       31
ABC RESULTS:        internal signals:       36
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       32
Removing temp directory.

3.23.2. Extracting gate netlist of module `$paramod\porownanie\BITS=32' to `<abc-temp-dir>/input.blif'..
Extracted 171 gates and 235 wires to a netlist network with 64 inputs and 1 outputs.

3.23.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       32
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              AOI3 cells:       22
ABC RESULTS:              NAND cells:       10
ABC RESULTS:               NOR cells:        7
ABC RESULTS:              OAI3 cells:       10
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:               XOR cells:       26
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:        1
Removing temp directory.

3.23.3. Extracting gate netlist of module `$paramod\przesuniecie\BITS=32' to `<abc-temp-dir>/input.blif'..
Extracted 533 gates and 599 wires to a netlist network with 64 inputs and 33 outputs.

3.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:       46
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:               MUX cells:      193
ABC RESULTS:              NAND cells:       30
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        7
ABC RESULTS:              OAI3 cells:        2
ABC RESULTS:                OR cells:       90
ABC RESULTS:             ORNOT cells:       35
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:      502
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:       33
Removing temp directory.

3.23.4. Extracting gate netlist of module `$paramod\ustawienie\BITS=32' to `<abc-temp-dir>/input.blif'..
Extracted 332 gates and 397 wires to a netlist network with 64 inputs and 33 outputs.

3.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:              OAI3 cells:       33
ABC RESULTS:                OR cells:      105
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:        internal signals:      300
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:       33
Removing temp directory.

3.23.5. Extracting gate netlist of module `\sync_arith_unit_12_rtl' to `<abc-temp-dir>/input.blif'..
Extracted 237 gates and 340 wires to a netlist network with 102 inputs and 35 outputs.

3.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:              AOI4 cells:       31
ABC RESULTS:               MUX cells:       32
ABC RESULTS:              NAND cells:       17
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:       60
ABC RESULTS:                OR cells:       13
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:               XOR cells:       31
ABC RESULTS:        internal signals:      203
ABC RESULTS:           input signals:      102
ABC RESULTS:          output signals:       35
Removing temp directory.

3.24. Executing OPT pass (performing simple optimizations).

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\konwersja\BITS=32.
Optimizing module $paramod\porownanie\BITS=32.
Optimizing module $paramod\przesuniecie\BITS=32.
<suppressed ~129 debug messages>
Optimizing module $paramod\ustawienie\BITS=32.
Optimizing module sync_arith_unit_12_rtl.

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\konwersja\BITS=32'.
Finding identical cells in module `$paramod\porownanie\BITS=32'.
Finding identical cells in module `$paramod\przesuniecie\BITS=32'.
Finding identical cells in module `$paramod\ustawienie\BITS=32'.
Finding identical cells in module `\sync_arith_unit_12_rtl'.
Removed a total of 0 cells.

3.24.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..
Removed 0 unused cells and 884 unused wires.
<suppressed ~5 debug messages>

3.24.5. Finished fast OPT passes.

3.25. Executing HIERARCHY pass (managing design hierarchy).

3.25.1. Analyzing design hierarchy..
Top module:  \sync_arith_unit_12_rtl
Used module:     $paramod\konwersja\BITS=32
Used module:     $paramod\porownanie\BITS=32
Used module:     $paramod\przesuniecie\BITS=32
Used module:     $paramod\ustawienie\BITS=32

3.25.2. Analyzing design hierarchy..
Top module:  \sync_arith_unit_12_rtl
Used module:     $paramod\konwersja\BITS=32
Used module:     $paramod\porownanie\BITS=32
Used module:     $paramod\przesuniecie\BITS=32
Used module:     $paramod\ustawienie\BITS=32
Removed 0 unused modules.

3.26. Printing statistics.

=== $paramod\konwersja\BITS=32 ===

   Number of wires:                 33
   Number of wire bits:             95
   Number of public wires:           3
   Number of public wire bits:      65
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 62
     $_ANDNOT_                      30
     $_MUX_                          1
     $_OR_                          31

=== $paramod\porownanie\BITS=32 ===

   Number of wires:                130
   Number of wire bits:            192
   Number of public wires:           3
   Number of public wire bits:      65
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                128
     $_ANDNOT_                       1
     $_AND_                         32
     $_AOI3_                        22
     $_NAND_                        10
     $_NOR_                          7
     $_OAI3_                        10
     $_ORNOT_                        8
     $_OR_                           4
     $_XNOR_                         8
     $_XOR_                         26

=== $paramod\przesuniecie\BITS=32 ===

   Number of wires:                387
   Number of wire bits:            480
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                416
     $_ANDNOT_                      46
     $_AND_                          4
     $_AOI3_                         1
     $_MUX_                        193
     $_NAND_                        30
     $_NOR_                          6
     $_NOT_                          7
     $_OAI3_                         2
     $_ORNOT_                       35
     $_OR_                          90
     $_XOR_                          2

=== $paramod\ustawienie\BITS=32 ===

   Number of wires:                125
   Number of wire bits:            218
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                154
     $_ANDNOT_                       3
     $_AND_                          1
     $_AOI3_                         1
     $_NAND_                         2
     $_NOR_                          2
     $_OAI3_                        33
     $_ORNOT_                        7
     $_OR_                         105

=== sync_arith_unit_12_rtl ===

   Number of wires:                180
   Number of wire bits:            401
   Number of public wires:          19
   Number of public wire bits:     240
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                235
     $_ANDNOT_                       7
     $_AND_                          1
     $_AOI4_                        31
     $_DFF_NN0_                     35
     $_MUX_                         32
     $_NAND_                        17
     $_NOR_                          1
     $_NOT_                         60
     $_ORNOT_                        3
     $_OR_                          13
     $_XOR_                         31
     $paramod\konwersja\BITS=32      1
     $paramod\porownanie\BITS=32      1
     $paramod\przesuniecie\BITS=32      1
     $paramod\ustawienie\BITS=32      1

=== design hierarchy ===

   sync_arith_unit_12_rtl            1
     $paramod\konwersja\BITS=32      1
     $paramod\porownanie\BITS=32      1
     $paramod\przesuniecie\BITS=32      1
     $paramod\ustawienie\BITS=32      1

   Number of wires:                855
   Number of wire bits:           1386
   Number of public wires:          33
   Number of public wire bits:     564
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                991
     $_ANDNOT_                      87
     $_AND_                         38
     $_AOI3_                        24
     $_AOI4_                        31
     $_DFF_NN0_                     35
     $_MUX_                        226
     $_NAND_                        59
     $_NOR_                         16
     $_NOT_                         67
     $_OAI3_                        45
     $_ORNOT_                       53
     $_OR_                         243
     $_XNOR_                         8
     $_XOR_                         59

3.27. Executing CHECK pass (checking for obvious problems).
checking module $paramod\konwersja\BITS=32..
checking module $paramod\porownanie\BITS=32..
checking module $paramod\przesuniecie\BITS=32..
checking module $paramod\ustawienie\BITS=32..
checking module sync_arith_unit_12_rtl..
found and reported 0 problems.

4. Executing ABC pass (technology mapping using ABC).

4.1. Extracting gate netlist of module `$paramod\konwersja\BITS=32' to `<abc-temp-dir>/input.blif'..
Extracted 62 gates and 94 wires to a netlist network with 32 inputs and 32 outputs.

4.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       35
ABC RESULTS:               NOT cells:        6
ABC RESULTS:                OR cells:       29
ABC RESULTS:        internal signals:       30
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       32
Removing temp directory.

4.2. Extracting gate netlist of module `$paramod\porownanie\BITS=32' to `<abc-temp-dir>/input.blif'..
Extracted 128 gates and 192 wires to a netlist network with 64 inputs and 1 outputs.

4.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       96
ABC RESULTS:               NOT cells:        7
ABC RESULTS:                OR cells:       53
ABC RESULTS:               XOR cells:       24
ABC RESULTS:        internal signals:      127
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:        1
Removing temp directory.

4.3. Extracting gate netlist of module `$paramod\przesuniecie\BITS=32' to `<abc-temp-dir>/input.blif'..
Extracted 416 gates and 480 wires to a netlist network with 64 inputs and 33 outputs.

4.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      391
ABC RESULTS:               NOT cells:       13
ABC RESULTS:                OR cells:      284
ABC RESULTS:        internal signals:      383
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:       33
Removing temp directory.

4.4. Extracting gate netlist of module `$paramod\ustawienie\BITS=32' to `<abc-temp-dir>/input.blif'..
Extracted 154 gates and 218 wires to a netlist network with 64 inputs and 33 outputs.

4.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       65
ABC RESULTS:               NOT cells:       44
ABC RESULTS:                OR cells:       57
ABC RESULTS:        internal signals:      121
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:       33
Removing temp directory.

4.5. Extracting gate netlist of module `\sync_arith_unit_12_rtl' to `<abc-temp-dir>/input.blif'..
Extracted 196 gates and 298 wires to a netlist network with 102 inputs and 35 outputs.

4.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      129
ABC RESULTS:               NOT cells:       74
ABC RESULTS:                OR cells:       86
ABC RESULTS:               XOR cells:       31
ABC RESULTS:        internal signals:      161
ABC RESULTS:           input signals:      102
ABC RESULTS:          output signals:       35
Removing temp directory.

5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\konwersja\BITS=32..
Finding unused cells or wires in module $paramod\porownanie\BITS=32..
Finding unused cells or wires in module $paramod\przesuniecie\BITS=32..
Finding unused cells or wires in module $paramod\ustawienie\BITS=32..
Finding unused cells or wires in module \sync_arith_unit_12_rtl..
Removed 0 unused cells and 1282 unused wires.
<suppressed ~5 debug messages>

6. Executing Verilog backend.
Dumping module `$paramod\konwersja\BITS=32'.
Dumping module `$paramod\porownanie\BITS=32'.
Dumping module `$paramod\przesuniecie\BITS=32'.
Dumping module `$paramod\ustawienie\BITS=32'.
Dumping module `\sync_arith_unit_12_rtl'.

7. Printing statistics.
